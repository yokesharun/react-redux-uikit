{"version":3,"sources":["components/Navigation.jsx","redux/constants/actionTypes.js","containers/ProductList.jsx","redux/actions/productActions.js","containers/Product.jsx","App.js","redux/reducers/index.js","redux/reducers/productReducers.js","redux/store.js","index.js"],"names":["Navigation","class","href","actionTypes","ProductList","navigate","useNavigate","dispatch","useDispatch","productsData","useSelector","state","allProducts","fetchProducts","a","fetch","then","res","json","type","payload","useEffect","length","role","products","map","i","className","src","image","alt","title","category","onClick","e","productId","id","process","price","Product","params","useParams","product","fetchProduct","Object","keys","description","App","path","exact","element","reducers","combineReducers","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c57c42a3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Navigation = () => {\n  return (\n    <nav class=\"navbar navbar-light bg-light\">\n      <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" href=\"/\">\n          React Redux Shop\n        </a>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","export const actionTypes = {\n    SET_PRODUCTS: \"SET_PRODUCTS\",\n    SELECTED_PRODUCT: \"SELECTED_PRODUCT\",\n    RESET_PRODUCT: \"RESET_PRODUCT\",\n}","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setProducts } from \"../redux/actions/productActions\";\n\nconst ProductList = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const productsData = useSelector((state) => state.allProducts);\n\n  const fetchProducts = async () => {\n    await fetch(\"https://fakestoreapi.com/products\")\n      .then((res) => res.json())\n      .then((json) => dispatch(setProducts(json)));\n  };\n\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  const redirectToProduct = (e, productId) => {\n    navigate(process.env.PUBLIC_URL + '/product/'+ productId);\n  };\n\n  const constructList = () => {\n    return productsData.products.map((i) => (\n      <div className=\"col-md-3 main-column\">\n        <div className=\"card\">\n          <img\n            src={i.image}\n            className=\"card-img-top product-image\"\n            alt={i.title}\n          />\n          <div className=\"card-body\">\n            <p>\n              <span class=\"badge bg-secondary\">{i.category}</span>\n            </p>\n            <h6 className=\"card-title\">{i.title}</h6>\n            {/* <p className=\"card-text\">\n        {i.description.substring(0,50)+\"...\"}\n        </p> */}\n            <button\n              type=\"button\"\n              className=\"btn btn-dark\"\n              onClick={(e) => redirectToProduct(e, i.id)}\n            >\n              Buy now at ${i.price}\n            </button>\n          </div>\n        </div>\n      </div>\n    ));\n  };\n\n  return (\n    <>\n      {productsData.length === 0 ? (\n        <div class=\"spinner-border\" role=\"status\">\n          <span class=\"visually-hidden\">Loading...</span>\n        </div>\n      ) : (\n        constructList()\n      )}\n    </>\n  );\n};\n\nexport default ProductList;\n","import { actionTypes } from \"../constants/actionTypes\";\n\nexport const setProducts = (products) => {\n  return {\n    type: actionTypes.SET_PRODUCTS,\n    payload: products,\n  };\n};\n\nexport const selectedProduct = (product) => {\n  return {\n    type: actionTypes.SELECTED_PRODUCT,\n    payload: product,\n  };\n};\n\nexport const resetProduct = () => {\n  return {\n    type: actionTypes.RESET_PRODUCT,\n  };\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { selectedProduct, resetProduct } from \"../redux/actions/productActions\";\n\nconst Product = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const productsData = useSelector((state) => state.product);\n\n  const fetchProduct = async () => {\n    await fetch(\"https://fakestoreapi.com/products/\" + params.productId)\n      .then((res) => res.json())\n      .then((json) => dispatch(selectedProduct(json)));\n  };\n\n  useEffect(() => {\n    fetchProduct();\n    return () => {\n      dispatch(resetProduct());\n    }\n  }, []);\n\n  return (\n    <>\n      <div>\n        <button\n          type=\"button\"\n          className=\"btn btn-dark\"\n          onClick={() => navigate(process.env.PUBLIC_URL + '/')}\n        >\n          Back\n        </button>\n      </div>\n      {Object.keys(productsData).length === 0 ? (\n        <div class=\"spinner-border\" role=\"status\">\n          <span class=\"visually-hidden\">Loading...</span>\n        </div>\n      ) : (\n        <>\n          <div class=\"col-md-6 main-column\">\n            <div class=\"card\">\n              <img\n                src={productsData.image}\n                class=\"card-img-top product-single-image\"\n                alt={productsData.title}\n              />\n            </div>\n          </div>\n          <div class=\"col-md-6 main-column\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">{productsData.title}</h5>\n                <p class=\"card-text\">{productsData.description}</p>\n                <h4>${productsData.price}</h4>\n                <button type=\"button\" class=\"btn btn-dark\">\n                  Buy now\n                </button>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Product;\n","import Navigation from \"./components/Navigation\";\nimport ProductList from \"./containers/ProductList\";\nimport Product from \"./containers/Product\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  HashRouter,\n} from \"react-router-dom\";\nimport \"./index.css\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navigation />\n        <div class=\"container\">\n          <div class=\"row main-column\">\n              <Routes>\n                <Route path={process.env.PUBLIC_URL + '/'} exact element={<ProductList />} />\n                <Route path={process.env.PUBLIC_URL + '/product/:productId'} element={<Product />} />\n              </Routes>\n          </div>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { productReducer, selectedProductReducer } from \"./productReducers\";\n\nconst reducers = combineReducers({\n  allProducts: productReducer,\n  product: selectedProductReducer,\n});\n\nexport default reducers;\n","import { actionTypes } from \"../constants/actionTypes\";\n\nexport const productReducer = (state = [], action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case actionTypes.SET_PRODUCTS:\n      return { ...state, products: payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const selectedProductReducer = (state = {}, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case actionTypes.SELECTED_PRODUCT:\n      return { ...state, ...payload };\n\n    case actionTypes.RESET_PRODUCT:\n        return {};\n\n    default:\n      return state;\n  }\n};\n","import { createStore } from \"redux\";\nimport reducers from \"./reducers\";\n\nconst initialState = {};\n\nconst store = createStore(\n  reducers,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}